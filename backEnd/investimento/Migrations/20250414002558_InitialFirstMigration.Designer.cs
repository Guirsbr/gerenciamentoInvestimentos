// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using investimento.Infrastructure;

#nullable disable

namespace investimento.Migrations
{
    [DbContext(typeof(ConnectionContext))]
    [Migration("20250414002558_InitialFirstMigration")]
    partial class InitialFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("investimento.Application.ViewModel.InvestmentResponseViewModel", b =>
                {
                    b.Property<string>("bank_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("current_value")
                        .HasColumnType("double precision");

                    b.Property<int>("id")
                        .HasColumnType("integer");

                    b.Property<double>("initial_value")
                        .HasColumnType("double precision");

                    b.Property<string>("investment_type_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("registration_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rentability")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("update_date")
                        .HasColumnType("timestamp with time zone");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("investimento.Domain.Models.BankAggregate.Bank", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("bank");
                });

            modelBuilder.Entity("investimento.Domain.Models.InvestmentAggregate.Investment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double>("current_value")
                        .HasColumnType("double precision");

                    b.Property<int>("id__bank")
                        .HasColumnType("integer");

                    b.Property<int>("id__investment_type")
                        .HasColumnType("integer");

                    b.Property<int>("id__user")
                        .HasColumnType("integer");

                    b.Property<double>("initial_value")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("registration_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rentability")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("update_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("id__bank");

                    b.HasIndex("id__investment_type");

                    b.HasIndex("id__user");

                    b.ToTable("investment");
                });

            modelBuilder.Entity("investimento.Domain.Models.InvestmentTypeAggregate.InvestmentType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("investment_type");
                });

            modelBuilder.Entity("investimento.Domain.Models.UserAggregate.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("registration_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("investimento.Domain.Models.InvestmentAggregate.Investment", b =>
                {
                    b.HasOne("investimento.Domain.Models.BankAggregate.Bank", "bank")
                        .WithMany()
                        .HasForeignKey("id__bank")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__investment__bank");

                    b.HasOne("investimento.Domain.Models.InvestmentTypeAggregate.InvestmentType", "investmentType")
                        .WithMany()
                        .HasForeignKey("id__investment_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__investment__investment_type");

                    b.HasOne("investimento.Domain.Models.UserAggregate.User", "user")
                        .WithMany()
                        .HasForeignKey("id__user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__investment__user");

                    b.Navigation("bank");

                    b.Navigation("investmentType");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
